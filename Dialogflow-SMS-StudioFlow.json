{
  "description": "Dialogflow CX SMS Sample",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "SetUtteranceVariable",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": 0,
          "y": 0
        }
      }
    },
    {
      "name": "SetUtteranceVariable",
      "type": "set-variables",
      "transitions": [
        {
          "next": "DialogflowDetectIntent",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{trigger.message.Body}}",
            "key": "utterance"
          }
        ],
        "offset": {
          "x": -50,
          "y": 200
        }
      }
    },
    {
      "name": "DialogflowDetectIntent",
      "type": "run-function",
      "transitions": [
        {
          "next": "SetDialogflowSessionId",
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": "ZS22c60c1ebfd21d98c50cfa30047e54bd",
        "environment_sid": "ZE0c47d7a7a9930683bbba0e340b38e4c6",
        "offset": {
          "x": 30,
          "y": 420
        },
        "function_sid": "ZH0fef563428a687c1ecd0b3e6cb12861c",
        "parameters": [
          {
            "value": "{{flow.variables.utterance}}",
            "key": "utterance"
          },
          {
            "value": "{{flow.variables.dialogflow_session_id}}",
            "key": "dialogflow_session_id"
          }
        ],
        "url": "https://dialogflow-cx-1539-dev.twil.io/dialogflow-detect-intent"
      }
    },
    {
      "name": "SendDialogflowAnswerAndWaitForReply",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "ResetUtteranceVariable",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -500,
          "y": 1140
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{% for i in (1..widgets.DialogflowDetectIntent.parsed.responseMessages.size) %}\n{{widgets.DialogflowDetectIntent.parsed.responseMessages[forloop.index0].text.text}}\n{% endfor %}",
        "timeout": "3600"
      }
    },
    {
      "name": "SendToFlexAgent",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 520,
          "y": 1460
        },
        "workflow": "WW122bdbcbafecd117c9636b479c98d1a5",
        "channel": "TCa078cdc3e0a83b2e7014929a41b2d03d",
        "attributes": "{\"name\": \"{{trigger.message.ChannelAttributes.from}}\", \"channelType\": \"{{trigger.message.ChannelAttributes.channel_type}}\", \"channelSid\": \"{{trigger.message.ChannelSid}}\"}"
      }
    },
    {
      "name": "WantsAgent",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "WantsToEndSession",
          "event": "noMatch"
        },
        {
          "next": "SendConnectingToAgent",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "Wants Agent",
              "arguments": [
                "{{widgets.DialogflowDetectIntent.parsed.intent.displayName}}"
              ],
              "type": "equal_to",
              "value": "small_talk.agent_hand_off"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.DialogflowDetectIntent.parsed.intent.displayName}}",
        "offset": {
          "x": 60,
          "y": 880
        }
      }
    },
    {
      "name": "ResetUtteranceVariable",
      "type": "set-variables",
      "transitions": [
        {
          "next": "DialogflowDetectIntent",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{widgets.SendDialogflowAnswerAndWaitForReply.inbound.Body}}",
            "key": "utterance"
          }
        ],
        "offset": {
          "x": -500,
          "y": 630
        }
      }
    },
    {
      "name": "SetDialogflowSessionId",
      "type": "set-variables",
      "transitions": [
        {
          "next": "WantsAgent",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{{widgets.DialogflowDetectIntent.parsed.session_id}}",
            "key": "dialogflow_session_id"
          }
        ],
        "offset": {
          "x": 60,
          "y": 680
        }
      }
    },
    {
      "name": "WantsToEndSession",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "SendDialogflowAnswerAndWaitForReply",
          "event": "noMatch"
        },
        {
          "next": "SendFinalMessage",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "End Session",
              "arguments": [
                "{{widgets.DialogflowDetectIntent.parsed.currentPage.displayName}}"
              ],
              "type": "equal_to",
              "value": "End Session"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.DialogflowDetectIntent.parsed.currentPage.displayName}}",
        "offset": {
          "x": -120,
          "y": 1140
        }
      }
    },
    {
      "name": "SendFinalMessage",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 80,
          "y": 1460
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{% for i in (1..widgets.DialogflowDetectIntent.parsed.responseMessages.size) %}\n{{widgets.DialogflowDetectIntent.parsed.responseMessages[forloop.index0].text.text}}\n{% endfor %}"
      }
    },
    {
      "name": "SendConnectingToAgent",
      "type": "send-message",
      "transitions": [
        {
          "next": "SendToFlexAgent",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 500,
          "y": 1160
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{% for i in (1..widgets.DialogflowDetectIntent.parsed.responseMessages.size) %}\n{{widgets.DialogflowDetectIntent.parsed.responseMessages[forloop.index0].text.text}}\n{% endfor %}"
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}
